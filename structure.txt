M.A.N.T.R.A. — FINAL PROJECT STRUCTURE (Locked v1.0, No Upgrades)
=================================================================

This is the FINAL, production-grade directory and data flow for the M.A.N.T.R.A. Personal Indian Stock Intelligence System.
This structure is designed to remain robust, understandable, and maintainable for many years—no upgrades or new files will ever be needed.

--------------------------------------------------------------------------------
Root Directory Structure
--------------------------------------------------------------------------------
app.py
    # Streamlit dashboard — the only UI file. 
    # Renders metrics, filters, tables, cards, export, and all visuals.
    # Reads everything from config and data—never hardcoded logic.

constants.py
    # All configuration, column names, factor functions, scoring logic,
    # factor weights, regimes, UI colors, and documentation strings.
    # Change here, and it updates everywhere—no code changes elsewhere.

core_system_foundation.py
    # The heart of all data I/O, cleaning, validation, schema checking,
    # feature engineering, memory optimization, caching, and health/quality checks.
    # Handles all loading from Google Sheets, full data pipeline, and ETL.

data_loader.py
    # Thin adapter: calls core_system_foundation.py's load_and_process()
    # to produce the exact dataframes and status objects the dashboard expects.
    # No logic—just a simple interface bridge for future-proofing.

signal_engine.py
    # Handles factor scoring, composite signals, risk banding, signal tagging,
    # regime logic, and row-by-row explainability (reason column).
    # 100% data/config driven—no hardcoded rules.

requirements.txt
    # Minimal, locked dependencies for Streamlit Cloud.
    # Only: streamlit, pandas, numpy, plotly

structure.txt
    # This file: explains the locked project structure, logic flow, and module responsibilities.
    # Should be kept up-to-date if any structural change is ever made (not expected).

--------------------------------------------------------------------------------
Data Flow & Logic Path
--------------------------------------------------------------------------------
[Google Sheets: Watchlist, Returns, Sector] 
        |
        v
core_system_foundation.py   (ETL, validation, feature engineering, quality)
        |
        v
data_loader.py              (thin adapter: returns (stocks_df, sector_df, health))
        |
        v
signal_engine.py            (multi-factor scoring, tag, reason, regime, risk)
        |
        v
app.py                      (dashboard: UI, metrics, cards, table, filter, chart)
        |
        v
requirements.txt            (for deployment — nothing extra)
        |
        v
structure.txt               (for human/project reference)

--------------------------------------------------------------------------------
Locked Design Philosophy
--------------------------------------------------------------------------------
- **No file uploads, no local data:** Always fetches latest Google Sheets.
- **All business logic and scoring are config/data-driven:** Change `constants.py` or the sheets, never the app code.
- **Single-point-in-time logic:** No historical memory; always operates on the freshest possible data snapshot.
- **No feature creep, no TODOs, no hidden dependencies:** All files in use are listed here. If a file is not listed, it is not used.
- **No `ui.py`, no "extras":** All UI lives in `app.py`, all data in Google Sheets, all logic in config and modules above.

--------------------------------------------------------------------------------
Sheet Names and Purpose
--------------------------------------------------------------------------------
- **Watchlist Sheet:**       Master universe — all stock-level attributes.
- **Returns Sheet:**         Multi-horizon returns, averages — for momentum/factor analysis.
- **Sector Sheet:**          Sector aggregates, rotation/momentum, heatmap.

--------------------------------------------------------------------------------
Key Maintenance Notes
--------------------------------------------------------------------------------
- **To change data or scoring:** Update the relevant Google Sheet or `constants.py`.
- **To add a new factor or regime:** Update only `constants.py` (FACTOR_CONFIG) and/or your sheets.
- **App and ETL code NEVER need to be updated for new columns or scoring logic.**
- **If something breaks, check the health report/status from `core_system_foundation.py` pipeline.**

--------------------------------------------------------------------------------
Version & Status
--------------------------------------------------------------------------------
- **This is the FINAL, locked, non-upgradeable version** for personal edge and clarity.
- **Any future feature must be added via data or config, not code.**
- **Version:** v1.0 (Locked, {year})
--------------------------------------------------------------------------------

M.A.N.T.R.A. Motto: "Precision Over Noise. Decisions, Not Guesses. My Edge, My Logic, My Market."
